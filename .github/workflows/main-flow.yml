  name: creating containers for backend project
  on: push
  jobs:
    bandservice:
      runs-on: ubuntu-latest
      name: band-service for the coolest bands
      steps:
        - name: check out repo
          uses: actions/checkout@v3

        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: 17
            cache: maven
            distribution: adopt

        - name: Build, test and package project
          working-directory: ./band-service
          run: mvn package -DskipTests

        - name: Docker login
          run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

        - name: Docker Build
          run: docker build -t ${{ secrets.DOCKER_USER }}/band-service:latest ./band-service

        - name: Upload container to Docker Hub with Push
          run: docker push ${{ secrets.DOCKER_USER }}/band-service:latest

    userservice:
      runs-on: ubuntu-latest
      name: user-service We rock!
      steps:
        - name: Check out repo
          uses: actions/checkout@v3

        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: 17
            cache: maven
            distribution: adopt

        - name: Build, test and package project
          working-directory: ./user-service
          run: mvn package -DskipTests

        - name: Docker login
          run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

        - name: Docker Build
          run: docker build -t ${{ secrets.DOCKER_USER }}/user-service:latest ./user-service

        - name: Upload container to Docker Hub with Push
          run: docker push ${{ secrets.DOCKER_USER }}/user-service:latest

    albumservice:
      runs-on: ubuntu-latest
      name: album-service Sounds like heaven
      steps:
        - name: Check out repo
          uses: actions/checkout@v3

        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: 17
            cache: maven
            distribution: adopt

        - name: Build, test and package project
          working-directory: ./album-service
          run: mvn package -DskipTests

        - name: Docker login
          run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

        - name: Docker Build
          run: docker build -t ${{ secrets.DOCKER_USER }}/album-service:latest ./album-service

        - name: Upload container to Docker Hub with Push
          run: docker push ${{ secrets.DOCKER_USER }}/album-service:latest

    apigateway:
      runs-on: ubuntu-latest
      name: the gates are open
      steps:
        - name: Check out repository
          uses: actions/checkout@v3

        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: 17
            cache: maven
            distribution: adopt

        - name: Build, test and package project
          working-directory: ./api-gateway
          run: mvn package -DskipTests

        - name: Docker login
          run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

        - name: Docker Build
          run: docker build -t ${{ secrets.DOCKER_USER }}/api-gateway:latest ./api-gateway

        - name: Upload container to Docker Hub with Push
          run: docker push ${{ secrets.DOCKER_USER }}/api-gateway:latest